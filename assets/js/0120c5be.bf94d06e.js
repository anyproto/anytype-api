"use strict";(self.webpackChunkanytype_api=self.webpackChunkanytype_api||[]).push([[9479],{91187:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>j,contentTitle:()=>f,default:()=>F,frontMatter:()=>h,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"reference/2025-05-20/create-type","title":"Create type","description":"Creates a new type in the specified space using a JSON payload. The creation process is subject to rate limiting. The payload must include type details such as the name, icon, and layout. The endpoint then returns the full type data, ready to be used for creating objects.","source":"@site/docs/reference/2025-05-20/create-type.api.mdx","sourceDirName":"reference/2025-05-20","slug":"/reference/2025-05-20/create-type","permalink":"/docs/reference/2025-05-20/create-type","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"create-type","title":"Create type","description":"Creates a new type in the specified space using a JSON payload. The creation process is subject to rate limiting. The payload must include type details such as the name, icon, and layout. The endpoint then returns the full type data, ready to be used for creating objects.","sidebar_label":"Create type","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/reference/2025-05-20/anytype-api","custom_edit_url":null},"sidebar":"openApiSidebar20250520","previous":{"title":"List types","permalink":"/docs/reference/2025-05-20/list-types"},"next":{"title":"Delete type","permalink":"/docs/reference/2025-05-20/delete-type"}}');var i=o(74848),a=o(28453),p=o(33617),n=o.n(p),s=o(17543),c=o.n(s),m=o(86013),l=o.n(m),y=o(63723),d=o.n(y),u=(o(18766),o(79329),o(9303));const h={id:"create-type",title:"Create type",description:"Creates a new type in the specified space using a JSON payload. The creation process is subject to rate limiting. The payload must include type details such as the name, icon, and layout. The endpoint then returns the full type data, ready to be used for creating objects.",sidebar_label:"Create type",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/reference/2025-05-20/anytype-api",custom_edit_url:null},f=void 0,j={},g=[];function b(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"Create type"}),"\n",(0,i.jsx)(n(),{method:"post",path:"/v1/spaces/{space_id}/types",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:"Creates a new type in the specified space using a JSON payload. The creation process is subject to rate limiting. The payload must include type details such as the name, icon, and layout. The endpoint then returns the full type data, ready to be used for creating objects."}),"\n",(0,i.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{parameters:[{description:"The version of the API to use",in:"header",name:"Anytype-Version",required:!0,schema:{default:"2025-05-20",type:"string"}},{description:"The ID of the space in which to create the type; must be retrieved from ListSpaces endpoint",in:"path",name:"space_id",required:!0,schema:{type:"string"}}]}),"\n",(0,i.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{properties:{icon:{description:"The icon of the object",oneOf:[{properties:{emoji:{description:"The emoji of the icon",example:"\ud83d\udcc4",type:"string"},format:{description:"The format of the icon",enum:["emoji","file","icon"],type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"apimodel.IconFormat"}},type:"object",title:"apimodel.EmojiIcon"},{properties:{file:{description:"The file of the icon",example:"bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay",type:"string"},format:{description:"The format of the icon",enum:["emoji","file","icon"],type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"apimodel.IconFormat"}},type:"object",title:"apimodel.FileIcon"},{properties:{color:{description:"The color of the icon",enum:["grey","yellow","orange","red","pink","purple","blue","ice","teal","lime"],example:"yellow",type:"string","x-enum-varnames":["ColorGrey","ColorYellow","ColorOrange","ColorRed","ColorPink","ColorPurple","ColorBlue","ColorIce","ColorTeal","ColorLime"],title:"apimodel.Color"},format:{description:"The format of the icon",enum:["emoji","file","icon"],type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"apimodel.IconFormat"},name:{description:"The name of the icon",example:"document",type:"string"}},type:"object",title:"apimodel.NamedIcon"}],type:"object",title:"apimodel.Icon"},key:{description:"The key of the type",example:"some_user_defined_type_key",type:"string"},layout:{description:"The layout of the type",enum:["basic","profile","action","note"],type:"string","x-enum-varnames":["TypeLayoutBasic","TypeLayoutProfile","TypeLayoutAction","TypeLayoutNote"],title:"apimodel.TypeLayout"},name:{description:"The name of the type",example:"Page",type:"string"},plural_name:{description:"The plural name of the type",example:"Pages",type:"string"},properties:{description:"\u26a0 Warning: Properties are experimental and may change in the next update. \u26a0 The properties linked to the type",items:{properties:{format:{description:"The format of the property used for filtering",enum:["text","number","select","multi_select","date","files","checkbox","url","email","phone","objects"],type:"string","x-enum-varnames":["PropertyFormatText","PropertyFormatNumber","PropertyFormatSelect","PropertyFormatMultiSelect","PropertyFormatDate","PropertyFormatFiles","PropertyFormatCheckbox","PropertyFormatUrl","PropertyFormatEmail","PropertyFormatPhone","PropertyFormatObjects"],title:"apimodel.PropertyFormat"},key:{description:"The key of the property",example:"last_modified_date",type:"string"},name:{description:"The name of the property",example:"Last modified date",type:"string"}},required:["format","key","name"],type:"object",title:"apimodel.PropertyLink"},type:"array",uniqueItems:!1}},required:["layout","name","plural_name"],type:"object",title:"apimodel.CreateTypeRequest"}}},description:"The type to create",required:!0}}),"\n",(0,i.jsx)(d(),{id:void 0,label:void 0,responses:{201:{content:{"application/json":{schema:{properties:{type:{description:"The type of the object",properties:{archived:{description:"Whether the type is archived",example:!1,type:"boolean"},icon:{description:"The icon of the object",oneOf:[{properties:{emoji:{description:"The emoji of the icon",example:"\ud83d\udcc4",type:"string"},format:{description:"The format of the icon",enum:["emoji","file","icon"],type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"apimodel.IconFormat"}},type:"object",title:"apimodel.EmojiIcon"},{properties:{file:{description:"The file of the icon",example:"bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay",type:"string"},format:{description:"The format of the icon",enum:["emoji","file","icon"],type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"apimodel.IconFormat"}},type:"object",title:"apimodel.FileIcon"},{properties:{color:{description:"The color of the icon",enum:["grey","yellow","orange","red","pink","purple","blue","ice","teal","lime"],example:"yellow",type:"string","x-enum-varnames":["ColorGrey","ColorYellow","ColorOrange","ColorRed","ColorPink","ColorPurple","ColorBlue","ColorIce","ColorTeal","ColorLime"],title:"apimodel.Color"},format:{description:"The format of the icon",enum:["emoji","file","icon"],type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"apimodel.IconFormat"},name:{description:"The name of the icon",example:"document",type:"string"}},type:"object",title:"apimodel.NamedIcon"}],type:"object",title:"apimodel.Icon"},id:{description:"The id of the type (which is unique across spaces)",example:"bafyreigyb6l5szohs32ts26ku2j42yd65e6hqy2u3gtzgdwqv6hzftsetu",type:"string"},key:{description:"The key of the type (can be the same across spaces for known types)",example:"page",type:"string"},layout:{description:"The layout of the object",enum:["basic","profile","action","note","bookmark","set","set","collection","participant"],type:"string","x-enum-varnames":["ObjectLayoutBasic","ObjectLayoutProfile","ObjectLayoutAction","ObjectLayoutNote","ObjectLayoutBookmark","ObjectLayoutSet","ObjectLayoutCollection","ObjectLayoutParticipant"]},name:{description:"The name of the type",example:"Page",type:"string"},object:{description:"The data model of the object",example:"type",type:"string"},plural_name:{description:"The plural name of the type",example:"Pages",type:"string"},properties:{description:"The properties linked to the type",items:{description:"The property",properties:{format:{description:"The format of the property used for filtering",enum:["text","number","select","multi_select","date","files","checkbox","url","email","phone","objects"],type:"string","x-enum-varnames":["PropertyFormatText","PropertyFormatNumber","PropertyFormatSelect","PropertyFormatMultiSelect","PropertyFormatDate","PropertyFormatFiles","PropertyFormatCheckbox","PropertyFormatUrl","PropertyFormatEmail","PropertyFormatPhone","PropertyFormatObjects"],title:"apimodel.PropertyFormat"},id:{description:"The id of the property",example:"bafyreids36kpw5ppuwm3ce2p4ezb3ab7cihhkq6yfbwzwpp4mln7rcgw7a",type:"string"},key:{description:"The key of the property",example:"last_modified_date",type:"string"},name:{description:"The name of the property",example:"Last modified date",type:"string"},object:{description:"The data model of the object",example:"property",type:"string"}},type:"object",title:"apimodel.Property"},type:"array",uniqueItems:!1}},type:"object",title:"apimodel.Type"}},type:"object",title:"apimodel.TypeResponse"}}},description:"The created type"},400:{content:{"application/json":{schema:{properties:{code:{example:"bad_request",type:"string"},message:{example:"Bad request",type:"string"},object:{example:"error",type:"string"},status:{example:400,type:"integer"}},type:"object",title:"util.ValidationError"}}},description:"Bad request"},401:{content:{"application/json":{schema:{properties:{code:{example:"unauthorized",type:"string"},message:{example:"Unauthorized",type:"string"},object:{example:"error",type:"string"},status:{example:401,type:"integer"}},type:"object",title:"util.UnauthorizedError"}}},description:"Unauthorized"},429:{content:{"application/json":{schema:{properties:{code:{example:"rate_limit_exceeded",type:"string"},message:{example:"Rate limit exceeded",type:"string"},object:{example:"error",type:"string"},status:{example:429,type:"integer"}},type:"object",title:"util.RateLimitError"}}},description:"Rate limit exceeded"},500:{content:{"application/json":{schema:{properties:{code:{example:"internal_server_error",type:"string"},message:{example:"Internal server error",type:"string"},object:{example:"error",type:"string"},status:{example:500,type:"integer"}},type:"object",title:"util.ServerError"}}},description:"Internal server error"}}})]})}function F(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}}}]);