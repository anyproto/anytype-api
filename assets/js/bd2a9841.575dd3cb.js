"use strict";(self.webpackChunkanytype_api=self.webpackChunkanytype_api||[]).push([[5984],{23180:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"examples/advanced/raycast","title":"Anytype for Raycast","description":"","source":"@site/docs/examples/advanced/raycast.md","sourceDirName":"examples/advanced","slug":"/examples/advanced/raycast","permalink":"/docs/examples/advanced/raycast","draft":false,"unlisted":false,"editUrl":"https://github.com/anyproto/anytype-api/tree/main/docs/examples/advanced/raycast.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Anytype for Raycast"},"sidebar":"exampleSidebar","previous":{"title":"Medium Example","permalink":"/docs/examples/intermediate/medium"}}');var r=t(74848),n=t(28453);const i={sidebar_position:1,title:"Anytype for Raycast"},d=void 0,c={},o=[];function p(e){return(0,r.jsx)(r.Fragment,{})}function l(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p()}}}]);