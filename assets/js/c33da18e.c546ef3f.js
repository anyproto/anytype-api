"use strict";(self.webpackChunkanytype_api=self.webpackChunkanytype_api||[]).push([[6419],{7338:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>u,default:()=>k,frontMatter:()=>m,metadata:()=>s,toc:()=>g});const s=JSON.parse('{"id":"reference/2025-03-17/list-types","title":"List types","description":"This endpoint retrieves a paginated list of object types (e.g. \'Page\', \'Note\', \'Task\') available within the specified space. Each type\u2019s record includes its unique identifier, type key, display name, icon, and a recommended layout. While a type\'s id is truly unique, a type\'s key can be the same across spaces for known types, e.g. \'ot-page\' for \'Page\'. Clients use this information when offering choices for object creation or for filtering objects by type through search.","source":"@site/docs/reference/2025-03-17/list-types.api.mdx","sourceDirName":"reference/2025-03-17","slug":"/reference/2025-03-17/list-types","permalink":"/docs/reference/2025-03-17/list-types","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-types","title":"List types","description":"This endpoint retrieves a paginated list of object types (e.g. \'Page\', \'Note\', \'Task\') available within the specified space. Each type\u2019s record includes its unique identifier, type key, display name, icon, and a recommended layout. While a type\'s id is truly unique, a type\'s key can be the same across spaces for known types, e.g. \'ot-page\' for \'Page\'. Clients use this information when offering choices for object creation or for filtering objects by type through search.","sidebar_label":"List types","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/reference/2025-03-17/anytype-api","custom_edit_url":null}}');var o=i(74848),n=i(28453),a=i(57742),r=i.n(a),p=i(78178),c=i.n(p),l=i(19624),y=i.n(l),d=i(96226),h=i.n(d),f=(i(77675),i(19365),i(51107));const m={id:"list-types",title:"List types",description:"This endpoint retrieves a paginated list of object types (e.g. 'Page', 'Note', 'Task') available within the specified space. Each type\u2019s record includes its unique identifier, type key, display name, icon, and a recommended layout. While a type's id is truly unique, a type's key can be the same across spaces for known types, e.g. 'ot-page' for 'Page'. Clients use this information when offering choices for object creation or for filtering objects by type through search.",sidebar_label:"List types",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/reference/2025-03-17/anytype-api",custom_edit_url:null},u=void 0,b={},g=[];function j(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List types"}),"\n",(0,o.jsx)(r(),{method:"get",path:"/spaces/{space_id}/types",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"This endpoint retrieves a paginated list of object types (e.g. 'Page', 'Note', 'Task') available within the specified space. Each type\u2019s record includes its unique identifier, type key, display name, icon, and a recommended layout. While a type's id is truly unique, a type's key can be the same across spaces for known types, e.g. 'ot-page' for 'Page'. Clients use this information when offering choices for object creation or for filtering objects by type through search."}),"\n",(0,o.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(c(),{parameters:[{description:"The version of the API to use",in:"header",name:"Anytype-Version",schema:{default:"2025-03-17",type:"string"}},{description:"Space ID",in:"path",name:"space_id",required:!0,schema:{type:"string"}},{description:"The number of items to skip before starting to collect the result set",in:"query",name:"offset",schema:{default:0,type:"integer"}},{description:"The number of items to return",in:"query",name:"limit",schema:{default:100,maximum:1e3,type:"integer"}}]}),"\n",(0,o.jsx)(y(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(h(),{id:void 0,label:void 0,responses:{200:{content:{"application/json":{schema:{properties:{data:{description:"The list of items in the current result set",items:{description:"The type of the object",properties:{archived:{description:"Whether the type is archived",example:!1,type:"boolean"},icon:{description:"The icon of the object",properties:{color:{description:"The color of the icon",example:"red",type:"string"},emoji:{description:"The emoji of the icon",example:"\ud83d\udcc4",type:"string"},file:{description:"The file of the icon",example:"http://127.0.0.1:31006/image/bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay",type:"string"},format:{description:"The type of the icon",enum:["emoji","file","icon"],example:"emoji",type:"string","x-enum-varnames":["IconFormatEmoji","IconFormatFile","IconFormatIcon"],title:"util.IconFormat"},name:{description:"The name of the icon",example:"document",type:"string"}},type:"object",title:"util.Icon"},id:{description:"The id of the type (which is unique across spaces)",example:"bafyreigyb6l5szohs32ts26ku2j42yd65e6hqy2u3gtzgdwqv6hzftsetu",type:"string"},key:{description:"The key of the type (can be the same across spaces for known types)",example:"ot-page",type:"string"},name:{description:"The name of the type",example:"Page",type:"string"},object:{description:"The data model of the object",example:"type",type:"string"},recommended_layout:{description:"The recommended layout of the type",example:"todo",type:"string"}},type:"object",title:"object.Type"},type:"array",uniqueItems:!1},pagination:{description:"The pagination metadata for the response",properties:{has_more:{description:"Indicates if there are more items available beyond the current result set",example:!0,type:"boolean"},limit:{description:"The maximum number of items returned in the result set",example:100,type:"integer"},offset:{description:"The number of items skipped before starting to collect the result set",example:0,type:"integer"},total:{description:"The total number of items available for the endpoint",example:1024,type:"integer"}},type:"object",title:"pagination.PaginationMeta"}},type:"object",title:"pagination.PaginatedResponse-object_Type"}}},description:"List of types"},401:{content:{"application/json":{schema:{properties:{error:{properties:{message:{example:"Unauthorized",type:"string"}},type:"object"}},type:"object",title:"util.UnauthorizedError"}}},description:"Unauthorized"},500:{content:{"application/json":{schema:{properties:{error:{properties:{message:{example:"Internal server error",type:"string"}},type:"object"}},type:"object",title:"util.ServerError"}}},description:"Internal server error"}}})]})}function k(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(j,{...e})}):j(e)}}}]);